name: Build Android APK (auto: Gradle or Expo prebuild)

on:
  push:
    branches: [ "ci-build", "main", "master" ]
  workflow_dispatch:

jobs:
  android:
    runs-on: ubuntu-latest
    env:
      CI: true
      EXPO_NO_TELEMETRY: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      # Install a wider set of SDKs to avoid compile/target mismatch
      - name: Install Android platforms/build-tools
        run: |
          sdkmanager "platform-tools" \
                     "platforms;android-35" "build-tools;35.0.0" \
                     "platforms;android-34" "build-tools;34.0.0"
          yes | sdkmanager --licenses

      - name: Install JS deps
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm i
          fi

      # Detect whether android/ already exists
      - name: Detect android/gradlew
        id: detect
        run: |
          if [ -f android/gradlew ]; then
            echo "mode=gradle" >> "$GITHUB_OUTPUT"
          else
            echo "mode=expo"   >> "$GITHUB_OUTPUT"
          fi
          echo "Detected mode: $(cat $GITHUB_OUTPUT || true)"

      # Create android/ via Expo if needed
      - name: Expo prebuild (Android) â€“ only if needed
        if: steps.detect.outputs.mode == 'expo'
        run: |
          npx --yes expo@latest prebuild --platform android --no-install --non-interactive
          test -f android/gradlew || (echo "ERROR: android/gradlew missing after prebuild" && ls -la android || true && exit 1)

      # Make sure gradlew is executable (permissions sometimes lost)
      - name: Ensure gradlew is executable
        run: |
          if [ -f android/gradlew ]; then
            chmod +x android/gradlew
          fi

      # Print tree so we can see what exists
      - name: Print project layout
        run: |
          ls -la
          ls -la android || true
          ls -la android/app || true
          find android -maxdepth 3 -type f -name "build.gradle*" -print || true

      # Some projects need explicit compile/target SDKs; inject if missing
      - name: Ensure compile/target SDK hints (no-op if already present)
        run: |
          if [ -f android/app/build.gradle ]; then
            if ! grep -q "compileSdkVersion" android/app/build.gradle; then
              echo "android { compileSdkVersion 34; defaultConfig { targetSdkVersion 34 } }" >> android/app/build.gradle
            fi
          fi

      - name: Gradle assembleDebug (verbose)
        working-directory: android
        run: |
          echo "org.gradle.jvmargs=-Xmx2048m -Dkotlin.daemon.jvm.options=-Xmx1024m" >> gradle.properties
          ./gradlew --version
          ./gradlew assembleDebug --stacktrace --no-daemon

      # Upload any APK Gradle produced (path can vary slightly)
      - name: Upload APK artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: VerumOmnis-debug-apk
          path: |
            android/app/build/outputs/apk/debug/*.apk
            android/app/build/outputs/**/**/*.apk
          if-no-files-found: warn
